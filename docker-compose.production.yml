services:
  app-backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile.prod
    container_name: khajanchi-api-prod
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=${DB_HOST:-db}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE:-khajanchi}
      - DB_DIALECT=${DB_DIALECT:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/v1/healthcheck', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - khajanchi-network

  db:
    image: mysql:8.4
    container_name: khajanchi-db-prod
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE:-khajanchi}
    volumes:
      - khajanchi-db-data-prod:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 15
    networks:
      - khajanchi-network

  app-frontend:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile.prod
      args:
        - VITE_API_URL=/api/v1
    container_name: khajanchi-ui-prod
    restart: always
    ports:
      - "80:80"
    depends_on:
      app-backend:
        condition: service_healthy
    networks:
      - khajanchi-network

networks:
  khajanchi-network:
    driver: bridge

volumes:
  khajanchi-db-data-prod: